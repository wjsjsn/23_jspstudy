** Ajax(Asynchronous JavaScript and XML) : 
- 비동기 통신(서버 처리를 기다리지 않고, 비동기 요청이 가능하다.)
- Ajax는 웹 페이지 전체를 다시 로딩하지 않고도, 웹 페이지의 일부분만을 갱신할 수 있습니다.(페이지 이동없이 고속으로 화면을 전환할 수 있다.)
- Ajax를 이용하면 백그라운드 영역에서 서버와 통신하여, 그 결과를 웹 페이지의 일부분에만 표시할 수 있습니다.
- 자바스크립트를 이용해서 비동기식으로 XML을 이용해 서버와 통신하는 방식
- 최근에는 XML보다 JSON을 더 많이 사용함
- 비동기식이란 여러가지 일이 동시적으로 발생한다는 뜻으로, 서버와 통신하는 동안 다른 작업을 할 수 있다는 의미
- 페이지 이동없는 통신으로 인한 보안상의 문제
- 동일-출처 정책으로 인해 다른 도메인과는 통신이 불가능하다.

- 크로스 도메인의 정의는 '서로 다른 도메인(Domain) 간의 호출'입니다.
만약, 제가 개발한 웹 사이트에서만 사용하기 위해서 API 서버를 구축하였는데, 다른 웹 서비스에서 이 API 서버에 마음대로 접근하여 API를 호출하여 사용한다면 보안상 큰 문제가 되어 이를 차단합니다. 그래서 Javascript는 Same Origin Policy(동일한 출처 정책)을 두어 다른 도메인 서버에 요청(Request) 하는 것을 차단합니다. 다시 말해 Javascript는 동일한 도메인 내에서만 서버 요청을 허용한다는 것입니다.
이러한 크로스 도메인 이슈는 아래와 같이 A, B 페이지 간에 통신을 하려고 할 때 발생할 수 있습니다. 예를 들어 설명을 하겠습니다.
1. 아래와 같이 도메인이 다른 경우
	A : 네이버(www.naver.com) / B : 구글(www.google.com)

2. 아래와 같이 메인 도메인은 같지만 서브 도메인이 다른 경우
	A : 네이버 카페(cafe.naver.com) / 네이버 블로그(blog.naver.com)

3. 아래와 같이 포트 번호가 서로 다른 경우
	A : 네이버(www.naver.com:8080) / B : 네이버(www.naver.com:8088)

4. 아래와 같이 프로토콜이 상이한 경우
	A : HTTP 네이버(http://www.naver.com/) / HTTPS 네이버(https://www.naver.com/)