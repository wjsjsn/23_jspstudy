/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-04 02:16:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;

public final class ex02_005fscript_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

int sum3 = 0;
public int add(int s1, int s2) {
	return s1 + s2;
}

int result = 0;

public void sub(int s1, int s2) {
	result = s1 - s2;
}
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<h2>0~10까지 자바의 for문을 사용해서 출력</h2>\r\n");
      out.write("	<h3>\r\n");
      out.write("		");

		for (int i = 0; i < 11; i++) {
		
      out.write("\r\n");
      out.write("		");
      out.print(i);
      out.write("\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("	</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2>0~10까지 자바의 for문을 사용해서 출력</h2>\r\n");
      out.write("	<h3>\r\n");
      out.write("		");

		for (int i = 0; i < 11; i++) {
			// jsp의 화면에 출력하는 내장 객체 out이 있음
			out.println(i);
		}
		
      out.write("\r\n");
      out.write("	</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2>0~10까지 합을 자바의 for문을 사용해서 출력</h2>\r\n");
      out.write("	");

	int sum = 0;
	for (int i = 0; i < 11; i++) {
		sum = sum + i;
	}
	out.println("<h3>첫번째 방법 : " + sum + "</h3>");
	
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2>0~10까지 합을 자바의 for문을 사용해서 출력</h2>\r\n");
      out.write("	");

	// 스크립트립에서도 변수 선언할 수 있음
	int sum2 = 0;
	for (int i = 0; i < 11; i++) {
		sum2 = sum2 + i;
	}
	
      out.write("\r\n");
      out.write("	<h3>\r\n");
      out.write("		두 번째 방법 :\r\n");
      out.write("		");
      out.print(sum2);
      out.write("</h3>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<h3>세 번째 방법 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sum2}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2>0~10까지 합을 자바의 for문을 사용해서 출력</h2>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');

	for (int i = 0; i < 11; i++) {
		sum3 = sum3 + i;
	}
	out.println("<h3>네번째 방법 : " + sum3 + "</h3>");
	
      out.write("\r\n");
      out.write("	<h3>\r\n");
      out.write("		다섯 번째 방법 :\r\n");
      out.write("		");
      out.print(sum2);
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<h3>여섯 번째 방법 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sum2}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2>변수와 메서드를 만들어서 사용하기(선언부 사용하기)</h2>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<h3>\r\n");
      out.write("		7 + 5 =\r\n");
      out.write("		");
      out.print(add(7, 5));
      out.write("</h3>\r\n");
      out.write("	");

	sub(7, 5);
	
      out.write("\r\n");
      out.write("	<h3>\r\n");
      out.write("		7 - 5 =\r\n");
      out.write("		");
      out.print(result);
      out.write("</h3>\r\n");
      out.write("	<h3>\r\n");
      out.write("		7 - 5 =\r\n");
      out.write("		");

	out.println(result);
	
      out.write("\r\n");
      out.write("	</h3>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<h3>7 - 5 = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${result}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h2>오늘 날짜와 운수를 출력</h2>\r\n");
      out.write("	<h3>오늘의 날짜</h3>\r\n");
      out.write("	");

	Calendar now = Calendar.getInstance();
	int year = now.get(Calendar.YEAR);
	int month = now.get(Calendar.MONTH) +  1;
	int day = now.get(Calendar.DATE);
	
	int res = (int)(Math.random()*100) + 1;
	out.println("<h4>" + year + "." + month + "." + day + " 운세는 " + res + "%입니다.</h4>");
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<h2>5단 출력</h2>\r\n");
      out.write("    ");

    for(int i = 1; i < 10; i++){
    	out.println("<h4>" + "5 * " + i + " = " + (i * 5) + "<br></h4>");
    }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
